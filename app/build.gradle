apply plugin: 'com.android.application'

def cfg = rootProject.ext.android

android {
    compileSdkVersion cfg.compileSdkVersion
    buildToolsVersion cfg.buildToolsVersion
    defaultConfig {
        applicationId "com.chinashb.www.mobileerp"
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        versionCode cfg.versionCode
        versionName cfg.versionName

        dexOptions {
            javaMaxHeapSize "8g"
//            preDexLibraries false
        }
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        //加载资源
        Properties properties = new Properties()
        InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream();
        properties.load(inputStream)

        //读取文件
        def sdkDir = properties.getProperty('key.file')
        //读取字段
        def key_keyAlias = properties.getProperty('keyAlias')
        def key_keyPassword = properties.getProperty('keyPassword');
        def key_storePassword = properties.getProperty('storePassword');

        release {
            keyAlias key_keyAlias
            keyPassword key_keyPassword
            storeFile file(sdkDir)
            storePassword key_storePassword
        }
        debug {
            keyAlias key_keyAlias
            keyPassword key_keyPassword
            storeFile file(sdkDir)
            storePassword key_storePassword
        }
    }

    //要加上这段，否则点assembleRelease生成的是app-unsinged-apk,并且放在signingConfigs 配置的下面
    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            minifyEnabled false
//            manifestPlaceholders = [
//                    Jpush_AppKey: "b30593265e19dc5b635b223e"
//            ]
        }
        debug {
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            minifyEnabled false

//            manifestPlaceholders = [
//                    Jpush_AppKey: "2cae1866b303ea72d1980d2c"
//            ]
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
//        main {
//            jniLibs.srcDirs = ['libs', 'src/main/jniLibs']
//            java.srcDirs = ['src/main/java', '../generated-src/java']
//
//            res.srcDirs = [
//                    'src/main/res',
//                    'src/main/res/anim',
//
//                    'src/main/res/values',
//
//                    'src/main/res/layout',
//                    'src/main/res/layout/home',
//
//
//                    'src/main/res/drawable',
//
//
//            ]
//        }
    }

    productFlavors {
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}
def libs = rootProject.ext.dependencies // 库依赖
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')


    implementation libs["support_v7"]
    implementation libs["design_v7"]
    implementation libs["recyclerview_v7"]
//    implementation 'com.android.support:appcompat-v7:25.4.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
//    implementation 'com.android.support:design:25.4.0'
//    implementation 'com.android.support:support-vector-drawable:25.4.0'
//    implementation 'com.android.support:support-v4:25.4.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.google.zxing:zxing-parent:3.3.3'
    implementation 'com.google.zxing:core:3.3.3'
    implementation 'com.journeyapps:zxing-android-embedded:3.6.0'
    implementation files('libs/ksoap2-android-assembly-3.6.2-jar-with-dependencies.jar')

    //流利说的下载开源工具
    implementation 'com.liulishuo.filedownloader:library:1.7.2'

//    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'
//    implementation 'com.jakewharton:butterknife:10.1.0'

    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.jakewharton:butterknife:8.8.1'

    //时间选择
    implementation 'com.contrarywind:Android-PickerView:4.1.6'

//    implementation  'com.umeng.umsdk:analytics:8.0.0'
//    implementation  'com.umeng.umsdk:common:2.0.0'

    implementation  'com.umeng.umsdk:common:9.4.4'// 必选
    implementation  'com.umeng.umsdk:asms:1.4.1'// 必选
    implementation 'com.umeng.umsdk:apm:1.5.2' // 错误分析升级为独立SDK，看crash数据请一定集成，可选
    implementation  'com.umeng.umsdk:abtest:1.0.0'//使用U-App中ABTest能力，可选


//    implementation (name:'umeng-asms-armeabi-vx.x.x', ext:'aar')
//    implementation (name:'umeng-abtest-vx.x.x', ext:'aar')
//    implementation (name:'umeng-apm-armeabi-vx.x.x', ext:'aar')


//    implementation project(':libapi')
//    implementation project(':libbase')
    implementation project(':zxing')
    implementation project(':qrcodecore')
    implementation 'org.jetbrains:annotations:15.0'
}
